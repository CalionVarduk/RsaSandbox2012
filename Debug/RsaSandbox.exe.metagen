  RsaSandbox.MainForm.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly RsaSandbox, Version=0.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class RsaSandbox.AES256: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.CipherMode Mode 'get set' : 
    System.Security.Cryptography.PaddingMode Padding 'get set' : 
  Methods:
    get_Padding(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Padding(PaddingMode): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Mode(CipherMode): PrivateScope, Public, Static, HideBySig, SpecialName
    encrypt(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
    decrypt(Byte[], Byte[]): PrivateScope, Public, Static, HideBySig
Class RsaSandbox.RSAInt: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    toUInt64(BigInteger&): PrivateScope, Public, Static, HideBySig
    bitCount(BigInteger&): PrivateScope, Public, Static, HideBySig
    byteCount(BigInteger&): PrivateScope, Public, Static, HideBySig
    getBit(Byte[], UInt32): PrivateScope, Public, Static, HideBySig
    modularInverse(BigInteger&, BigInteger&): PrivateScope, Public, Static, HideBySig
    intSqrt(BigInteger&): PrivateScope, Public, Static, HideBySig
    nthRoot(BigInteger&, UInt32): PrivateScope, Public, Static, HideBySig
Class RsaSandbox.SHA512Password: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Hash 'get ' : 
    Byte[] Salt 'get ' : 
  Methods:
    get_Salt(): PrivateScope, Public, HideBySig, SpecialName
    get_Hash(): PrivateScope, Public, HideBySig, SpecialName
    change(String, String, Byte[]): PrivateScope, Public, HideBySig
    change(String, String): PrivateScope, Public, HideBySig
    authenticate(String): PrivateScope, Public, HideBySig
Class RsaSandbox.RSAKey: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(RsaSandbox.RSAKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Numerics.BigInteger ByRef, System.Numerics.BigInteger ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsWienerSafe 'get ' : 
    Boolean IsPublicSafe 'get ' : 
    Boolean IsFermatSafe 'get ' : 
    System.Numerics.BigInteger PublicExponent 'get ' : 
    System.Numerics.BigInteger Modulus 'get ' : 
    Int32 BlockLength 'get ' : 
    Int32 BitLength 'get ' : 
    Boolean AreExponentsSet 'get ' : 
    Boolean IsPasswordProtected 'get ' : 
  Methods:
    get_IsPasswordProtected(): PrivateScope, Public, HideBySig, SpecialName
    get_AreExponentsSet(): PrivateScope, Public, HideBySig, SpecialName
    get_BitLength(): PrivateScope, Public, HideBySig, SpecialName
    get_BlockLength(): PrivateScope, Public, HideBySig, SpecialName
    get_Modulus(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFermatSafe(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPublicSafe(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWienerSafe(): PrivateScope, Public, HideBySig, SpecialName
    trySetExponents(BigInteger&): PrivateScope, Public, HideBySig
    invertExponents(): PrivateScope, Public, HideBySig
    setPassword(String, String): PrivateScope, Public, HideBySig
    setPassword(String): PrivateScope, Public, HideBySig
    removePassword(String): PrivateScope, Public, HideBySig
    authenticate(String): PrivateScope, Public, HideBySig
    getPrivateExponent(String): PrivateScope, Public, HideBySig
    getPrivateExponent(): PrivateScope, Public, HideBySig
    getPrimes(BigInteger&, BigInteger&, String): PrivateScope, Public, HideBySig
    getPrimes(BigInteger&, BigInteger&): PrivateScope, Public, HideBySig
    getPrivateExponents(BigInteger&, BigInteger&, BigInteger&, String): PrivateScope, Public, HideBySig
    getPrivateExponents(BigInteger&, BigInteger&, BigInteger&): PrivateScope, Public, HideBySig
    getCRTDecryptionKey(BigInteger&, BigInteger&, BigInteger&, BigInteger&, BigInteger&, String): PrivateScope, Public, HideBySig
    getCRTDecryptionKey(BigInteger&, BigInteger&, BigInteger&, BigInteger&, BigInteger&): PrivateScope, Public, HideBySig
    getAllPrivateComponents(BigInteger&, BigInteger&, BigInteger&, BigInteger&, BigInteger&, BigInteger&, String): PrivateScope, Public, HideBySig
    getAllPrivateComponents(BigInteger&, BigInteger&, BigInteger&, BigInteger&, BigInteger&, BigInteger&): PrivateScope, Public, HideBySig
Class CVFileIO.DataConverterBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AreBytesLoaded 'get ' : 
    Boolean IsDataLoaded 'get ' : 
    Byte[] ByteArray 'set' : 
    System.Object DataObject 'set' : 
  Methods:
    set_DataObject(Object): PrivateScope, Public, HideBySig, SpecialName
    set_ByteArray(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_IsDataLoaded(): PrivateScope, Public, HideBySig, SpecialName
    get_AreBytesLoaded(): PrivateScope, Public, HideBySig, SpecialName
    dataToBytes(Byte[]&): PrivateScope, Public, HideBySig
    bytesToData<RsaSandbox::RSAKey ^>(RSAKey&): PrivateScope, Public, HideBySig
Struct CVStructures.KeyedPair<unsigned char\,unsigned short>: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte key : Public
    UInt16 item : Public
  Methods:
    set(Byte, UInt16): PrivateScope, Public, HideBySig
Class CVFileIO.CVAwfulCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 minBlockLength IsConst : Public, Static, HasDefault
    UInt32 maxBlockLength IsConst : Public, Static, HasDefault
  Methods:
    setKey(Byte[]): PrivateScope, Public, HideBySig
    getKey(): PrivateScope, Public, HideBySig
    getBlockLength(): PrivateScope, Public, HideBySig
    adjustBeforeEncryption(Byte[]&): PrivateScope, Public, HideBySig
    adjustAfterDecryption(Byte[]&): PrivateScope, Public, HideBySig
    encrypt(Byte[]): PrivateScope, Public, HideBySig
    decrypt(Byte[]): PrivateScope, Public, HideBySig
Class CVFileIO.HuffmanCompression: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    compress(Byte[]): PrivateScope, Public, Static, HideBySig
    decompress(Byte[]): PrivateScope, Public, Static, HideBySig
    getEntropy(Byte[]): PrivateScope, Public, Static, HideBySig
    getAverageCodeLength(Byte[]): PrivateScope, Public, Static, HideBySig
    getCodeEfficiency(Byte[]): PrivateScope, Public, Static, HideBySig
Struct CVFileIO.HuffmanCompression+TreeItem: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 iParent : Public
    Int32 iLeft : Public
    Int32 iRight : Public
    Int16 byte : Public
    Boolean visited : Public
    TreeItem EMPTY IsConst : Public, Static
Struct CVFileIO.HuffmanCompression+TreeRoot: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 index : Public
    Int32 weight : Public
    TreeRoot EMPTY IsConst : Public, Static
  Methods:
    op_GreaterThan(TreeRoot, TreeRoot): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(TreeRoot, TreeRoot): PrivateScope, Public, Static, HideBySig, SpecialName
Class CVFileIO.FileManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    setEncryptKey(Byte[]): PrivateScope, Public, HideBySig
    setEncryptKey(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    getEncryptKey(): PrivateScope, Public, HideBySig
    setCompressState(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    getCompressState(): PrivateScope, Public, HideBySig
    eligibleForEncryption(): PrivateScope, Public, HideBySig
    setEncryptionState(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    getEncryptionState(): PrivateScope, Public, HideBySig
    setSignature(Byte[]): PrivateScope, Public, HideBySig
    setSignature(String): PrivateScope, Public, HideBySig
    getSignature(): PrivateScope, Public, HideBySig
    getSignatureLength(): PrivateScope, Public, HideBySig
    getEncryptKeyLength(): PrivateScope, Public, HideBySig
    save(String, Byte[]): PrivateScope, Public, HideBySig
    load(String, Byte[]&): PrivateScope, Public, HideBySig
Class CVStructures.TaskReportProgressHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(BackgroundTask): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(BackgroundTask, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class CVStructures.BackgroundTask: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Int64 PredictedTimeLeftMs 'get ' : 
    Int64 TimeToNextReportMs 'get ' : 
    Int64 ReportProgressInterval 'get set' : 
    Int64 TimeElapsedMs 'get ' : 
    Single ProgressPercentage 'get ' : 
    UInt32 CurrentStep 'get ' : 
    UInt32 StepCount 'get set' : 
    Boolean IsStepCountDefined 'get ' : 
    Boolean IsCancellationRequested 'get ' : 
    Boolean IsBusy 'get ' : 
  Events:
    CVStructures.TaskReportProgressHandler ReportProgress: SpecialName
  Methods:
    get_IsBusy(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCancellationRequested(): PrivateScope, Public, HideBySig, SpecialName
    get_IsStepCountDefined(): PrivateScope, Public, HideBySig, SpecialName
    get_StepCount(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentStep(): PrivateScope, Public, HideBySig, SpecialName
    get_ProgressPercentage(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeElapsedMs(): PrivateScope, Public, HideBySig, SpecialName
    get_ReportProgressInterval(): PrivateScope, Public, HideBySig, SpecialName
    set_ReportProgressInterval(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_TimeToNextReportMs(): PrivateScope, Public, HideBySig, SpecialName
    get_PredictedTimeLeftMs(): PrivateScope, Public, HideBySig, SpecialName
    add_ReportProgress(TaskReportProgressHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ReportProgress(TaskReportProgressHandler): PrivateScope, Public, HideBySig, SpecialName
    requestCancel(): PrivateScope, Public, HideBySig
Class CVStructures.BigContinuedFraction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Numerics.BigInteger ByRef, System.Numerics.BigInteger ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 TermCount 'get ' : 
    System.Numerics.BigInteger Denominator 'get set' : 
    System.Numerics.BigInteger Numerator 'get set' : 
  Methods:
    get_Numerator(): PrivateScope, Public, HideBySig, SpecialName
    set_Numerator(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    get_Denominator(): PrivateScope, Public, HideBySig, SpecialName
    set_Denominator(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    get_TermCount(): PrivateScope, Public, HideBySig, SpecialName
    set(BigInteger&, BigInteger&): PrivateScope, Public, HideBySig
    getTerm(Int32): PrivateScope, Public, HideBySig
    getConvergent(Int32): PrivateScope, Public, HideBySig
    getConvergent(Int32, BigInteger&, BigInteger&): PrivateScope, Public, HideBySig
    getConvergents(): PrivateScope, Public, HideBySig
Class RsaSandbox.RSAKeyBinaryConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVFileIO.DataConverterBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class RsaSandbox.AppIO: AutoLayout, AnsiClass, Class, Public, Abstract
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    saveRsaKey(String, RSAKey): PrivateScope, Public, Static, HideBySig
    loadRsaKey(String, RSAKey&): PrivateScope, Public, Static, HideBySig
    openFile(String, Byte[]&): PrivateScope, Public, Static, HideBySig
    saveFile(String, Byte[]): PrivateScope, Public, Static, HideBySig
Class CVNetControls.RectangularBorder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.Color, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color ColorDisabled 'get set' : 
    System.Drawing.Color Color 'get set' : 
    Int32 Thickness 'get set' : 
    Boolean IsSimple 'get ' : 
    Boolean IsNone 'get ' : 
  Methods:
    get_IsNone(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSimple(): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    linkToControl(Control): PrivateScope, Public, HideBySig
    unlinkFromControl(Control): PrivateScope, Public, HideBySig
    setNone(): PrivateScope, Public, HideBySig
    setSimple(Color, Int32): PrivateScope, Public, HideBySig
    setSimple(Color): PrivateScope, Public, HideBySig
    setSimple(): PrivateScope, Public, HideBySig
Class CVNetControls.DynamicControl: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    interpretAs<CVNetControls::TitledTextBox>(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::LabelButton>(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::SingleCheckBox>(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::TitledCheckBox>(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::TitledLabel>(): PrivateScope, Public, HideBySig
    fetchWinControl(): PrivateScope, Public, HideBySig
Class CVNetControls.DynamicControlPostEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(DynamicControl): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(DynamicControl, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class CVNetControls.DynamicControlPreEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(DynamicControl, Boolean&): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(DynamicControl, Boolean&, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(Boolean&, IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Interface CVNetControls.IDynamicList: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class CVNetControls.DynamicControlCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Int32 ControlTitledLists 'get ' : 
    Int32 ControlSingleLists 'get ' : 
    Int32 SingleControls 'get ' : 
    Int32 TitledControls 'get ' : 
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TitledControls(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleControls(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlSingleLists(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTitledLists(): PrivateScope, Public, HideBySig, SpecialName
    add(DynamicControl): PrivateScope, Public, HideBySig
    insertAt(Int32, DynamicControl): PrivateScope, Public, HideBySig
    removeAt(Int32): PrivateScope, Public, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    getAt(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::TitledTextBox>(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::LabelButton>(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::SingleCheckBox>(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::TitledCheckBox>(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::TitledLabel>(Int32): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.DynamicControlAligner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ControlTitledLists 'get ' : 
    Int32 ControlSingleLists 'get ' : 
    Int32 SingleControls 'get ' : 
    Int32 TitledControls 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_TitledControls(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleControls(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlSingleLists(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTitledLists(): PrivateScope, Public, HideBySig, SpecialName
    addControl(DynamicControl): PrivateScope, Public, HideBySig
    addControl(Control): PrivateScope, Public, HideBySig
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, HideBySig
Class CVNetControls.SingleControl<System::Windows::Forms::Control>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean AutoSize 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Font Font 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    System.Drawing.Size PreferredSize 'get ' : 
    System.Drawing.Size Size 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
    setWinControl(Control): PrivateScope, Public, HideBySig
Class CVNetControls.SingleControl<System::Windows::Forms::Label>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean AutoSize 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Font Font 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    System.Drawing.Size PreferredSize 'get ' : 
    System.Drawing.Size Size 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.LabelButton: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SingleControl<System::Windows::Forms::Label>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
    System.Drawing.Color ForeColorDisabled 'get set' : 
    System.Drawing.Color BackColorDisabled 'get set' : 
    System.Drawing.Color ForeColorActiveMouseOver 'get set' : 
    System.Drawing.Color BackColorActiveMouseOver 'get set' : 
    System.Drawing.Color ForeColorActive 'get set' : 
    System.Drawing.Color BackColorActive 'get set' : 
    System.Drawing.Color ForeColorMouseOver 'get set' : 
    System.Drawing.Color BackColorMouseOver 'get set' : 
    System.Drawing.Color ForeColorNormal 'get set' : 
    System.Drawing.Color BackColorNormal 'get set' : 
    Boolean OnClickDeactivatable 'get set' : 
    Boolean ColorableActivation 'get set' : 
    Boolean ColorableMouseOver 'get set' : 
    Boolean ActivatedOnHold 'get set' : 
    Boolean ActivatedOnClick 'get set' : 
    Boolean MousedOverAndColorable 'get ' : 
    Boolean ActivatedAndColorable 'get ' : 
    Boolean Activated 'get ' : 
    Boolean IsMouseHovering 'get ' : 
    Boolean IsMouseWithinBounds 'get ' : 
    Boolean IsMouseMoving 'get ' : 
    Boolean IsMouseDown 'get ' : 
    System.Drawing.ContentAlignment TextAlign 'get set' : 
  Methods:
    get_TextAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseDown(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseMoving(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseWithinBounds(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseHovering(): PrivateScope, Public, HideBySig, SpecialName
    get_Activated(): PrivateScope, Public, HideBySig, SpecialName
    get_ActivatedAndColorable(): PrivateScope, Public, HideBySig, SpecialName
    get_MousedOverAndColorable(): PrivateScope, Public, HideBySig, SpecialName
    get_ActivatedOnClick(): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnClick(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ActivatedOnHold(): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnHold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ColorableMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableMouseOver(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ColorableActivation(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableActivation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OnClickDeactivatable(): PrivateScope, Public, HideBySig, SpecialName
    set_OnClickDeactivatable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorNormal(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorNormal(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorActive(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorActive(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorActiveMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorActiveMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    activate(): PrivateScope, Public, HideBySig
    deactivate(): PrivateScope, Public, HideBySig
    addMouseDownEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    addMouseUpEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    addMouseMoveEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    addMouseEnterEvent(EventHandler): PrivateScope, Public, HideBySig
    addMouseLeaveEvent(EventHandler): PrivateScope, Public, HideBySig
    addMouseHoverEvent(EventHandler): PrivateScope, Public, HideBySig
    toLabel(): PrivateScope, Public, HideBySig
Class CVNetControls.SecondaryForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(CVNetControls.LabelButton): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsModal 'get set' : 
    Boolean IsShown 'get set' : 
  Methods:
    get_IsShown(): PrivateScope, Public, HideBySig, SpecialName
    get_IsModal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsModal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    display(): PrivateScope, Public, HideBySig
    closeIfShown(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::LabelButton>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(LabelButton): PrivateScope, Public, HideBySig
    insertAt(Int32, LabelButton): PrivateScope, Public, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.LabelButtonList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::LabelButton>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Drawing.Color ForeColorDisabled 'set' : 
    System.Drawing.Color BackColorDisabled 'set' : 
    System.Drawing.Color ForeColorActiveMouseOver 'set' : 
    System.Drawing.Color BackColorActiveMouseOver 'set' : 
    System.Drawing.Color ForeColorActive 'set' : 
    System.Drawing.Color BackColorActive 'set' : 
    System.Drawing.Color ForeColorMouseOver 'set' : 
    System.Drawing.Color BackColorMouseOver 'set' : 
    System.Drawing.Color ForeColorNormal 'set' : 
    System.Drawing.Color BackColorNormal 'set' : 
    Boolean OnClickDeactivatable 'set' : 
    Boolean ColorableActivation 'set' : 
    Boolean ColorableMouseOver 'set' : 
    Boolean ActivatedOnHold 'set' : 
    Boolean ActivatedOnClick 'set' : 
    System.Drawing.ContentAlignment TextAlign 'set' : 
    Boolean AutoSize 'set' : 
    System.Drawing.Font Font 'set' : 
  Methods:
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnClick(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnHold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableMouseOver(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableActivation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_OnClickDeactivatable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    addButton(String, String): PrivateScope, Public, HideBySig
    insertButton(Int32, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.ColorFactory: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Scale(Color, Single): PrivateScope, Public, Static, HideBySig
Class CVNetControls.NumericLimiter<float>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    min(Single, Single): PrivateScope, Public, Static, HideBySig
    minMax(Single, Single, Single): PrivateScope, Public, Static, HideBySig
Class CVNetControls.SimpleBox: AutoLayout, AnsiClass, Class, Public, Abstract
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Icon BoxIcon 'get set' : 
    CVNetControls.LabelButtonList ButtonCollection 'get ' : 
    Boolean IsShown 'get ' : 
    System.String CancelText 'get set' : 
    System.String ConfirmText 'get set' : 
    System.Drawing.Font ButtonsFont 'get set' : 
    System.Drawing.Font InfoFont 'get set' : 
    System.Drawing.Color ButtonForeColorMouseOver 'get set' : 
    System.Drawing.Color ButtonBackColorMouseOver 'get set' : 
    System.Drawing.Color ButtonForeColorNormal 'get set' : 
    System.Drawing.Color ButtonBackColorNormal 'get set' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
  Methods:
    get_BackColor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonBackColorNormal(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonBackColorNormal(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonForeColorNormal(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonForeColorNormal(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonBackColorMouseOver(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonBackColorMouseOver(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonForeColorMouseOver(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonForeColorMouseOver(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InfoFont(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_InfoFont(Font): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonsFont(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonsFont(Font): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConfirmText(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ConfirmText(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CancelText(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CancelText(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsShown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonCollection(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BoxIcon(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_BoxIcon(Icon): PrivateScope, Public, Static, HideBySig, SpecialName
    display(DynamicControlCollection, String): PrivateScope, Public, Static, HideBySig
    display(DynamicControlCollection): PrivateScope, Public, Static, HideBySig
    display(String[], String): PrivateScope, Public, Static, HideBySig
    display(String, String): PrivateScope, Public, Static, HideBySig
    display(String[]): PrivateScope, Public, Static, HideBySig
    display(String): PrivateScope, Public, Static, HideBySig
    displayWithResult(String[], String): PrivateScope, Public, Static, HideBySig
    displayWithResult(String, String): PrivateScope, Public, Static, HideBySig
    displayWithResult(String[]): PrivateScope, Public, Static, HideBySig
    displayWithResult(String): PrivateScope, Public, Static, HideBySig
    close(): PrivateScope, Public, Static, HideBySig
Class CVNetControls.LabelButtonScheme: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invert(ControlTitledList<CVNetControls::LabelButton>, Boolean(HasFieldMarshal), Color, Color, Single): PrivateScope, Public, Static, HideBySig
    Invert(ControlSingleList<CVNetControls::LabelButton>, Boolean(HasFieldMarshal), Color, Color, Single): PrivateScope, Public, Static, HideBySig
    Invert(LabelButton, Boolean(HasFieldMarshal), Color, Color, Single): PrivateScope, Public, Static, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::LabelButton> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::LabelButton>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::LabelButton> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(LabelButton): PrivateScope, Public, HideBySig
    insertAt(Int32, LabelButton): PrivateScope, Public, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
Class CVNetControls.LabelButtonTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::LabelButton>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Drawing.Color ForeColorDisabled 'set' : 
    System.Drawing.Color BackColorDisabled 'set' : 
    System.Drawing.Color ForeColorActiveMouseOver 'set' : 
    System.Drawing.Color BackColorActiveMouseOver 'set' : 
    System.Drawing.Color ForeColorActive 'set' : 
    System.Drawing.Color BackColorActive 'set' : 
    System.Drawing.Color ForeColorMouseOver 'set' : 
    System.Drawing.Color BackColorMouseOver 'set' : 
    System.Drawing.Color ForeColorNormal 'set' : 
    System.Drawing.Color BackColorNormal 'set' : 
    Boolean OnClickDeactivatable 'set' : 
    Boolean ColorableActivation 'set' : 
    Boolean ColorableMouseOver 'set' : 
    Boolean ActivatedOnHold 'set' : 
    Boolean ActivatedOnClick 'set' : 
    System.Drawing.ContentAlignment TextAlign 'set' : 
    Boolean AutoSize 'set' : 
    System.Drawing.Font Font 'set' : 
  Methods:
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnClick(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnHold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableMouseOver(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableActivation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_OnClickDeactivatable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    addButton(String, String): PrivateScope, Public, HideBySig
    insertButton(Int32, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.SingleControl<System::Windows::Forms::PictureBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean AutoSize 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Font Font 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    System.Drawing.Size PreferredSize 'get ' : 
    System.Drawing.Size Size 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.SingleCheckBox: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SingleControl<System::Windows::Forms::PictureBox>
    Void .ctor(System.Windows.Forms.Control, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
    Int32 CheckOffset 'get set' : 
    Boolean Checked 'get set' : 
  Methods:
    get_Checked(): PrivateScope, Public, HideBySig, SpecialName
    set_Checked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    addMouseDownEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    toPictureBox(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::SingleCheckBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(SingleCheckBox): PrivateScope, Public, HideBySig
    insertAt(Int32, SingleCheckBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.SingleCheckBoxList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::SingleCheckBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckedIndex 'get ' : 
    Boolean Locked 'get set' : 
    Boolean MultiSelection 'get ' : 
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    Int32 CheckOffset 'set' : 
  Methods:
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSelection(): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedIndex(): PrivateScope, Public, HideBySig, SpecialName
    addCheckBox(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    insertCheckBox(Int32, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    disableMultiSelection(Int32): PrivateScope, Public, HideBySig
    singleSelection(Int32): PrivateScope, Public, HideBySig
    enableMultiSelection(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::SingleCheckBox> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::SingleCheckBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::SingleCheckBox> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(SingleCheckBox): PrivateScope, Public, HideBySig
    insertAt(Int32, SingleCheckBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.SingleCheckBoxTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::SingleCheckBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckedIndex 'get ' : 
    Boolean Locked 'get set' : 
    Boolean MultiSelection 'get ' : 
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    Int32 CheckOffset 'set' : 
  Methods:
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSelection(): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedIndex(): PrivateScope, Public, HideBySig, SpecialName
    addCheckBox(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    insertCheckBox(Int32, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    disableMultiSelection(Int32): PrivateScope, Public, HideBySig
    singleSelection(Int32): PrivateScope, Public, HideBySig
    enableMultiSelection(): PrivateScope, Public, HideBySig
Class CVNetControls.MenuButton: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.LabelButton
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CVNetControls.LabelButtonList MenuItems 'get ' : 
    System.Drawing.Color MenuBorderColorDisabled 'get set' : 
    System.Drawing.Color MenuBorderColor 'get set' : 
    Int32 MenuBorderThickness 'get set' : 
    CVNetControls.RectangularBorder MenuBorderStyle 'get set' : 
    System.Drawing.Color MenuBackColor 'get set' : 
    Int32 MenuOffsetY 'get set' : 
    Int32 MenuOffsetX 'get set' : 
    System.Drawing.Point MenuOffset 'get set' : 
    Int32 MenuHeight 'get ' : 
    Int32 MenuWidth 'get ' : 
    System.Drawing.Size MenuSize 'get ' : 
    Boolean MenuAlignedRight 'get set' : 
    Boolean MenuAlignedLeft 'get set' : 
    Boolean MenuVisible 'get ' : 
    Int32 MenuItemSpacing 'get set' : 
    Int32 MenuHideDelay 'get set' : 
    Int32 MenuMarginBottom 'get set' : 
    Int32 MenuMarginTop 'get set' : 
    Int32 MenuMarginRight 'get set' : 
    Int32 MenuMarginLeft 'get set' : 
  Methods:
    get_MenuMarginLeft(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuMarginLeft(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuMarginRight(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuMarginRight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuMarginTop(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuMarginTop(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuMarginBottom(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuMarginBottom(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuHideDelay(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuHideDelay(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuItemSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuItemSpacing(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuVisible(): PrivateScope, Public, HideBySig, SpecialName
    get_MenuAlignedLeft(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuAlignedLeft(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MenuAlignedRight(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuAlignedRight(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MenuSize(): PrivateScope, Public, HideBySig, SpecialName
    get_MenuWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_MenuHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_MenuOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuOffset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MenuOffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuOffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuOffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuOffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MenuBorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuBorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_MenuBorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuBorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MenuBorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuBorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MenuBorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_MenuBorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MenuItems(): PrivateScope, Public, HideBySig, SpecialName
    addButton(LabelButton): PrivateScope, Public, HideBySig
    addButtons(ControlSingleList<CVNetControls::LabelButton>): PrivateScope, Public, HideBySig
    getButtonAt(Int32): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<System::Windows::Forms::PictureBox>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<System::Windows::Forms::PictureBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<System::Windows::Forms::PictureBox>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledCheckBox: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControl<System::Windows::Forms::PictureBox>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
    Int32 CheckOffset 'get set' : 
    Boolean Checked 'get set' : 
  Methods:
    get_Checked(): PrivateScope, Public, HideBySig, SpecialName
    set_Checked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    addMouseDownEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    toPictureBox(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::TitledCheckBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledCheckBox): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledCheckBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledCheckBoxList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::TitledCheckBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckedIndex 'get ' : 
    Boolean Locked 'get set' : 
    Boolean MultiSelection 'get ' : 
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    Int32 CheckOffset 'set' : 
  Methods:
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSelection(): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedIndex(): PrivateScope, Public, HideBySig, SpecialName
    addCheckBox(String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    insertCheckBox(Int32, String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    disableMultiSelection(Int32): PrivateScope, Public, HideBySig
    singleSelection(Int32): PrivateScope, Public, HideBySig
    enableMultiSelection(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledCheckBox> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::TitledCheckBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledCheckBox> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledCheckBox): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledCheckBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    performLayout(): PrivateScope, Public, HideBySig
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledCheckBoxTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::TitledCheckBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckedIndex 'get ' : 
    Boolean Locked 'get set' : 
    Boolean MultiSelection 'get ' : 
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    Int32 CheckOffset 'set' : 
  Methods:
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSelection(): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedIndex(): PrivateScope, Public, HideBySig, SpecialName
    addCheckBox(String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    insertCheckBox(Int32, String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    disableMultiSelection(Int32): PrivateScope, Public, HideBySig
    singleSelection(Int32): PrivateScope, Public, HideBySig
    enableMultiSelection(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<System::Windows::Forms::Label>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<System::Windows::Forms::Label>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<System::Windows::Forms::Label>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledLabel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControl<System::Windows::Forms::Label>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.BorderStyle BorderStyle 'get set' : 
    System.Drawing.ContentAlignment TextAlign 'get set' : 
  Methods:
    get_TextAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    toLabel(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::TitledLabel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledLabel): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledLabel): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledLabelList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::TitledLabel>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'set' : 
    System.Drawing.ContentAlignment TextAlign 'set' : 
    Boolean ControlAutoSize 'set' : 
    System.Drawing.Font ControlFont 'set' : 
    System.Drawing.Font TitleFont 'set' : 
  Methods:
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    addLabel(String, String, String): PrivateScope, Public, HideBySig
    insertLabel(Int32, String, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledLabel> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::TitledLabel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledLabel> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledLabel): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledLabel): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledLabelTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::TitledLabel>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'set' : 
    System.Drawing.ContentAlignment TextAlign 'set' : 
    Boolean ControlAutoSize 'set' : 
    System.Drawing.Font ControlFont 'set' : 
    System.Drawing.Font TitleFont 'set' : 
  Methods:
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    addLabel(String, String, String): PrivateScope, Public, HideBySig
    insertLabel(Int32, String, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<System::Windows::Forms::TextBox>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<System::Windows::Forms::TextBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<System::Windows::Forms::TextBox>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledTextBox: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControl<System::Windows::Forms::TextBox>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.ScrollBars ScrollBars 'get set' : 
    Boolean WordWrap 'get set' : 
    Boolean Multiline 'get set' : 
    Boolean ReadOnly 'get set' : 
    Int32 MaxLength 'get set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'get set' : 
    System.Windows.Forms.HorizontalAlignment TextAlign 'get set' : 
  Methods:
    get_TextAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(HorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Multiline(): PrivateScope, Public, HideBySig, SpecialName
    set_Multiline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_WordWrap(): PrivateScope, Public, HideBySig, SpecialName
    set_WordWrap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollBars(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollBars(ScrollBars): PrivateScope, Public, HideBySig, SpecialName
    toTextBox(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::TitledTextBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledTextBox): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledTextBox): PrivateScope, Public, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledTextBoxList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::TitledTextBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Windows.Forms.ScrollBars ScrollBars 'set' : 
    Boolean WordWrap 'set' : 
    Boolean Multiline 'set' : 
    Boolean ReadOnly 'set' : 
    Int32 MaxLength 'set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'set' : 
    System.Windows.Forms.HorizontalAlignment TextAlign 'set' : 
    Boolean ControlAutoSize 'set' : 
  Methods:
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(HorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_Multiline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_WordWrap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollBars(ScrollBars): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    addTextBox(String, String, String): PrivateScope, Public, HideBySig
    insertTextBox(Int32, String, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledTextBox> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::TitledTextBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledTextBox> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledTextBox): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledTextBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    performLayout(): PrivateScope, Public, HideBySig
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledTextBoxTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::TitledTextBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Windows.Forms.ScrollBars ScrollBars 'set' : 
    Boolean WordWrap 'set' : 
    Boolean Multiline 'set' : 
    Boolean ReadOnly 'set' : 
    Int32 MaxLength 'set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'set' : 
    System.Windows.Forms.HorizontalAlignment TextAlign 'set' : 
    Boolean ControlAutoSize 'set' : 
  Methods:
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(HorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_Multiline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_WordWrap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollBars(ScrollBars): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    addTextBox(String, String, String): PrivateScope, Public, HideBySig
    insertTextBox(Int32, String, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.DoubleBufferedPanel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Panel
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CVNetControls.SingleControl<CVNetControls::DoubleBufferedPanel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean AutoSize 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Font Font 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    System.Drawing.Size PreferredSize 'get ' : 
    System.Drawing.Size Size 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.SingleProgressBar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SingleControl<CVNetControls::DoubleBufferedPanel>
    Void .ctor(System.Windows.Forms.Control, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single ProgressPercentage 'get set' : 
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
  Methods:
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ProgressPercentage(): PrivateScope, Public, HideBySig, SpecialName
    set_ProgressPercentage(Single): PrivateScope, Public, HideBySig, SpecialName
    toPanel(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::DoubleBufferedPanel>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<CVNetControls::DoubleBufferedPanel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::DoubleBufferedPanel>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledProgressBar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControl<CVNetControls::DoubleBufferedPanel>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single ProgressPercentage 'get set' : 
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
  Methods:
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ProgressPercentage(): PrivateScope, Public, HideBySig, SpecialName
    set_ProgressPercentage(Single): PrivateScope, Public, HideBySig, SpecialName
    toPanel(): PrivateScope, Public, HideBySig
Class RsaSandbox.PasswordForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MinLength 'get set' : 
    Boolean IsShown 'get ' : 
  Methods:
    get_IsShown(): PrivateScope, Public, HideBySig, SpecialName
    get_MinLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MinLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    setPassword(RSAKey): PrivateScope, Public, HideBySig
    removePassword(RSAKey): PrivateScope, Public, HideBySig
    getKeyPrivateComponents(RSAKey, BigInteger&, BigInteger&, BigInteger&): PrivateScope, Public, HideBySig
    getPassword(RSAKey): PrivateScope, Public, HideBySig
Class RsaSandbox.Toolbox: AutoLayout, AnsiClass, Class, Public, Abstract
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    setPassword(RSAKey): PrivateScope, Public, Static, HideBySig
    removePassword(RSAKey): PrivateScope, Public, Static, HideBySig
    getKeyPrivateComponents(RSAKey, BigInteger&, BigInteger&, BigInteger&): PrivateScope, Public, Static, HideBySig
    getPassword(RSAKey): PrivateScope, Public, Static, HideBySig
    displayKeySafetyInfo(RSAKey): PrivateScope, Public, Static, HideBySig
    clearBuffer<unsigned char>(Byte[]&): PrivateScope, Public, Static, HideBySig
    getPntValue(Int32): PrivateScope, Public, Static, HideBySig
    getHLcValue(Int32): PrivateScope, Public, Static, HideBySig
    setTitledControl<System::Windows::Forms::TextBox>(TitledControl<System::Windows::Forms::TextBox>, String, String): PrivateScope, Public, Static, HideBySig
    setTitledControl<System::Windows::Forms::Label>(TitledControl<System::Windows::Forms::Label>, String, String): PrivateScope, Public, Static, HideBySig
Class RsaSandbox.SecureRandom: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    getBigInteger(Int32): PrivateScope, Public, HideBySig
    getUInt32(UInt32, UInt32): PrivateScope, Public, HideBySig
    getBytes(Int32): PrivateScope, Public, HideBySig
Class RsaSandbox.Attacks.CommonModulusAttackOutcomeHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(CommonModulusAttack, RSAKey, RSAKey, Boolean(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(CommonModulusAttack, RSAKey, RSAKey, Boolean(HasFieldMarshal), AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class RsaSandbox.Attacks.CommonModulusAttack: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVStructures.BackgroundTask
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    RsaSandbox.Attacks.CommonModulusAttackOutcomeHandler Outcome: SpecialName
  Methods:
    add_Outcome(CommonModulusAttackOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Outcome(CommonModulusAttackOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    tryToBreak(RSAKey, RSAKey): PrivateScope, Public, HideBySig
Class CVStructures.CVHeap<CVFileIO::HuffmanCompression::TreeRoot>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInMaxMode 'get ' : 
    Boolean IsInMinMode 'get ' : 
    Boolean IsEmpty 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInMinMode(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInMaxMode(): PrivateScope, Public, HideBySig, SpecialName
    insert(TreeRoot): PrivateScope, Public, HideBySig
    extract(): PrivateScope, Public, HideBySig
Class RsaSandbox.Congruence: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Numerics.BigInteger ByRef, System.Numerics.BigInteger ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInvertible 'get ' : 
    System.Numerics.BigInteger Reciprocal 'get ' : 
    System.Numerics.BigInteger Opposite 'get ' : 
    System.Numerics.BigInteger Modulus 'get set' : 
    System.Numerics.BigInteger Remainder 'get set' : 
  Methods:
    solve(Congruence, Congruence): PrivateScope, Public, Static, HideBySig
    get_Remainder(): PrivateScope, Public, HideBySig, SpecialName
    set_Remainder(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    get_Modulus(): PrivateScope, Public, HideBySig, SpecialName
    set_Modulus(BigInteger): PrivateScope, Public, HideBySig, SpecialName
    get_Opposite(): PrivateScope, Public, HideBySig, SpecialName
    get_Reciprocal(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInvertible(): PrivateScope, Public, HideBySig, SpecialName
    set(BigInteger&, BigInteger&): PrivateScope, Public, HideBySig
    getRemainderMultiple(BigInteger): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class RsaSandbox.PrimalityTester: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    RsaSandbox.SecureRandom RNG 'get ' : 
  Methods:
    get_RNG(): PrivateScope, Public, HideBySig, SpecialName
    isPrime(BigInteger&, UInt32): PrivateScope, Public, HideBySig
    isSafePrime(BigInteger&, UInt32): PrivateScope, Public, HideBySig
Class RsaSandbox.Generation.FaultyGenOutcomeHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(FaultyKeyGenerator, RSAKey): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(FaultyKeyGenerator, RSAKey, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class RsaSandbox.Generation.FaultyKeyGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVStructures.BackgroundTask
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    RsaSandbox.Generation.FaultyGenOutcomeHandler Outcome: SpecialName
  Methods:
    add_Outcome(FaultyGenOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Outcome(FaultyGenOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    fermatUnsafe(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    wienerUnsafe(Int32, Int32): PrivateScope, Public, HideBySig
Class RsaSandbox.Ciphering.RSALengthCalculator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    getEncryptBlockCount(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getEncryptCipherLength(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getEncryptLengths(RSAKey, Int32, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    isDecryptionPossible(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getDecryptBlockCount(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getDecryptDataLength(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getDecryptLengths(RSAKey, Int32, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    getOAEPkLength(RSAKey): PrivateScope, Public, Static, HideBySig
    getOAEPMessageLength(RSAKey): PrivateScope, Public, Static, HideBySig
    getOAEPLengths(RSAKey, Int32, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    getOAEPEncryptBlockCount(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getOAEPEncryptOutputLength(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getOAEPEncryptCipherLength(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getOAEPEncryptLengths(RSAKey, Int32, Int32&, Int32&, Int32&, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    getOAEPEncryptLengths(RSAKey, Int32, Int32&, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    getOAEPDecryptBlockCount(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getOAEPDecryptOutputLength(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getOAEPDecryptDataLength(RSAKey, Int32): PrivateScope, Public, Static, HideBySig
    getOAEPDecryptLengths(RSAKey, Int32, Int32&, Int32&, Int32&, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    getOAEPDecryptLengths(RSAKey, Int32, Int32&, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
Class RsaSandbox.Attacks.HastadAttackOutcomeHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(HastadAttack, Byte[], Boolean(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(HastadAttack, Byte[], Boolean(HasFieldMarshal), AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class RsaSandbox.Attacks.HastadAttack: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVStructures.BackgroundTask
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    RsaSandbox.Attacks.HastadAttackOutcomeHandler Outcome: SpecialName
  Methods:
    add_Outcome(HastadAttackOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Outcome(HastadAttackOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    performAttack(List`1, List`1): PrivateScope, Public, HideBySig
Class RsaSandbox.Attacks.RSAFactorizationOutcomeHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(RSAFactorization, RSAKey, Boolean(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(RSAFactorization, RSAKey, Boolean(HasFieldMarshal), AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class RsaSandbox.Attacks.RSAFactorization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVStructures.BackgroundTask
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    RsaSandbox.Attacks.RSAFactorizationMode Mode 'get set' : 
  Events:
    RsaSandbox.Attacks.RSAFactorizationOutcomeHandler Outcome: SpecialName
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(RSAFactorizationMode): PrivateScope, Public, HideBySig, SpecialName
    add_Outcome(RSAFactorizationOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Outcome(RSAFactorizationOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    factor(RSAKey): PrivateScope, Public, HideBySig
Struct RsaSandbox.Attacks.RSAFactorizationMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RsaSandbox.Attacks.RSAFactorizationMode Naive = 0 : Public, Static, Literal, HasDefault
    RsaSandbox.Attacks.RSAFactorizationMode Fermat = 1 : Public, Static, Literal, HasDefault
Class RsaSandbox.SizableHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.HashAlgorithm, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 HashBlockCount 'get ' : 
    Int32 BitSize 'get ' : 
    Int32 ByteSize 'get set' : 
    System.Security.Cryptography.HashAlgorithm Algorithm 'get set' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_Algorithm(HashAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_ByteSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ByteSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BitSize(): PrivateScope, Public, HideBySig, SpecialName
    get_HashBlockCount(): PrivateScope, Public, HideBySig, SpecialName
    computeHash(Byte[], Byte[]): PrivateScope, Public, HideBySig
    computeHash(Byte[]): PrivateScope, Public, HideBySig
Class RsaSandbox.Ciphering.OAEPPadder: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    encryptPad(RSAKey, Byte[]): PrivateScope, Public, Static, HideBySig
    decryptPad(RSAKey, Byte[]): PrivateScope, Public, Static, HideBySig
Class RsaSandbox.Generation.KeyGenState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Fields:
    RsaSandbox.Generation.KeyGenState StandBy : Public, Static
    RsaSandbox.Generation.KeyGenState GeneratingP : Public, Static
    RsaSandbox.Generation.KeyGenState GeneratingQ : Public, Static
    RsaSandbox.Generation.KeyGenState GeneratingAux : Public, Static
  Properties:
    System.String Info 'get ' : 
  Methods:
    get_Info(): PrivateScope, Public, HideBySig, SpecialName
Class RsaSandbox.Generation.KeyGenOutcomeHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(RSAKeyGenerator, RSAKey, KeyGenOutcome): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(RSAKeyGenerator, RSAKey, KeyGenOutcome, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class RsaSandbox.Generation.RSAKeyGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVStructures.BackgroundTask
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    RsaSandbox.Generation.KeyGenState State 'get ' : 
  Events:
    RsaSandbox.Generation.KeyGenOutcomeHandler Outcome: SpecialName
  Methods:
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    add_Outcome(KeyGenOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Outcome(KeyGenOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    sequential(UInt32, UInt32, UInt32, UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    sequential(UInt32, UInt32, UInt32, UInt32, UInt32, UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    sequential65537(UInt32, UInt32, UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    sequential65537(UInt32, UInt32, UInt32, UInt32, UInt32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    dss(UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig
    dss65537(UInt32, UInt32): PrivateScope, Public, HideBySig
    dssWithConditions(UInt32, UInt32, UInt32): PrivateScope, Public, HideBySig
    dssWithConditions65537(UInt32, UInt32): PrivateScope, Public, HideBySig
    setRandomExponents(RSAKey, UInt32): PrivateScope, Public, HideBySig
Class RsaSandbox.KeyGenForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    RsaSandbox.RSAKey CurrentKey 'get ' : 
  Methods:
    get_CurrentKey(): PrivateScope, Public, HideBySig, SpecialName
    setExportKeyEvent(Func`1): PrivateScope, Public, HideBySig
Class RsaSandbox.FermatFaultyKeyForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 PrimeDifferenceBitLength 'get ' : 
    Int32 PublicExponentBitLength 'get ' : 
    Int32 ModulusBitLength 'get ' : 
  Methods:
    get_ModulusBitLength(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicExponentBitLength(): PrivateScope, Public, HideBySig, SpecialName
    get_PrimeDifferenceBitLength(): PrivateScope, Public, HideBySig, SpecialName
Class RsaSandbox.FermatFactorForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton, RsaSandbox.KeyGenForm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class RsaSandbox.CommonModForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton, RsaSandbox.KeyGenForm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class RsaSandbox.HastadExponentForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MaxPublicExponent 'get ' : 
    Int32 ModulusBitLength 'get ' : 
    Int32 PublicExponent 'get ' : 
  Methods:
    get_PublicExponent(): PrivateScope, Public, HideBySig, SpecialName
    get_ModulusBitLength(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPublicExponent(): PrivateScope, Public, Static, HideBySig, SpecialName
Class RsaSandbox.Ciphering.RSACipherOutcomeHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(RSACipher, Byte[], RSACipherOutcome): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(RSACipher, Byte[], RSACipherOutcome, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class RsaSandbox.Ciphering.RSACipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVStructures.BackgroundTask
    Void .ctor(RsaSandbox.RSAKey, RsaSandbox.Ciphering.RSACipherPaddingMode, RsaSandbox.Ciphering.RSACipherDecryptionMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    RsaSandbox.RSAKey Key 'get set' : 
    RsaSandbox.Ciphering.RSACipherDecryptionMode DecryptionMode 'get set' : 
    RsaSandbox.Ciphering.RSACipherPaddingMode PaddingMode 'get set' : 
  Events:
    RsaSandbox.Ciphering.RSACipherOutcomeHandler Outcome: SpecialName
  Methods:
    get_PaddingMode(): PrivateScope, Public, HideBySig, SpecialName
    set_PaddingMode(RSACipherPaddingMode): PrivateScope, Public, HideBySig, SpecialName
    get_DecryptionMode(): PrivateScope, Public, HideBySig, SpecialName
    set_DecryptionMode(RSACipherDecryptionMode): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    set_Key(RSAKey): PrivateScope, Public, HideBySig, SpecialName
    add_Outcome(RSACipherOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Outcome(RSACipherOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    encrypt(Byte[]): PrivateScope, Public, HideBySig
    decrypt(Byte[], String): PrivateScope, Public, HideBySig
    decrypt(Byte[]): PrivateScope, Public, HideBySig
Class RsaSandbox.EncryptMessageForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
  Methods:
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
Class RsaSandbox.HastadForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton, RsaSandbox.KeyGenForm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class RsaSandbox.Attacks.WienerAttackOutcomeHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(WienerAttack, RSAKey, WienerAttackOutcome): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(WienerAttack, RSAKey, WienerAttackOutcome, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class RsaSandbox.Attacks.WienerAttack: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVStructures.BackgroundTask
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Events:
    RsaSandbox.Attacks.WienerAttackOutcomeHandler Outcome: SpecialName
  Methods:
    add_Outcome(WienerAttackOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Outcome(WienerAttackOutcomeHandler): PrivateScope, Public, HideBySig, SpecialName
    tryToBreak(RSAKey): PrivateScope, Public, HideBySig
Class RsaSandbox.WienerFaultyKeyForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 PrivateExponentBitLength 'get ' : 
    Int32 ModulusBitLength 'get ' : 
  Methods:
    get_ModulusBitLength(): PrivateScope, Public, HideBySig, SpecialName
    get_PrivateExponentBitLength(): PrivateScope, Public, HideBySig, SpecialName
Class RsaSandbox.WienerForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton, RsaSandbox.KeyGenForm): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class RsaSandbox.MainForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct RsaSandbox.Generation.KeyGenOutcome: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RsaSandbox.Generation.KeyGenOutcome OK = 0 : Public, Static, Literal, HasDefault
    RsaSandbox.Generation.KeyGenOutcome Cancelled = 1 : Public, Static, Literal, HasDefault
    RsaSandbox.Generation.KeyGenOutcome NotFound = 2 : Public, Static, Literal, HasDefault
Struct RsaSandbox.Ciphering.RSACipherPaddingMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RsaSandbox.Ciphering.RSACipherPaddingMode None = 0 : Public, Static, Literal, HasDefault
    RsaSandbox.Ciphering.RSACipherPaddingMode OAEP = 1 : Public, Static, Literal, HasDefault
Struct RsaSandbox.Ciphering.RSACipherDecryptionMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RsaSandbox.Ciphering.RSACipherDecryptionMode Basic = 0 : Public, Static, Literal, HasDefault
    RsaSandbox.Ciphering.RSACipherDecryptionMode CRT = 1 : Public, Static, Literal, HasDefault
    RsaSandbox.Ciphering.RSACipherDecryptionMode BasicBlinding = 2 : Public, Static, Literal, HasDefault
    RsaSandbox.Ciphering.RSACipherDecryptionMode CRTBlinding = 3 : Public, Static, Literal, HasDefault
Struct RsaSandbox.Ciphering.RSACipherOutcome: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RsaSandbox.Ciphering.RSACipherOutcome OK = 0 : Public, Static, Literal, HasDefault
    RsaSandbox.Ciphering.RSACipherOutcome Cancelled = 1 : Public, Static, Literal, HasDefault
    RsaSandbox.Ciphering.RSACipherOutcome WrongDecryptionKey = 2 : Public, Static, Literal, HasDefault
Struct RsaSandbox.Attacks.WienerAttackOutcome: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RsaSandbox.Attacks.WienerAttackOutcome OK = 0 : Public, Static, Literal, HasDefault
    RsaSandbox.Attacks.WienerAttackOutcome Cancelled = 1 : Public, Static, Literal, HasDefault
    RsaSandbox.Attacks.WienerAttackOutcome Unsuccessful = 2 : Public, Static, Literal, HasDefault
